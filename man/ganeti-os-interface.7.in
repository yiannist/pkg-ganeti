.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "GANETI-OS-INTERFACE" "7" "03 June 2010" "ganeti 2.1" ""

.SH NAME
ganeti-os-interface \- specifications for guest OS types
.SH "DESCRIPTION"
.PP
The method of supporting guest operating systems in Ganeti is to
have, for each guest OS type, a directory containing a number of
required files.
.SH "REFERENCE"
.PP
There are six required files: \fIcreate\fR,
\fIimport\fR, \fIexport\fR,
\fIrename\fR (executables),
\fIganeti_api_version\fR and
\fIvariants.list\fR (text file).
.SS "COMMON ENVIRONMENT"
.PP
All commands will get their input via environment variables. A
common set of variables will be exported for all commands, and
some of them might have extra ones. Note that all counts are
zero-based.
.TP
\fBOS_API_VERSION\fR
The OS api version that the rest of the
environment conforms to.
.TP
\fBINSTANCE_NAME\fR
The instance name the script should operate
on.
.TP
\fBINSTANCE_OS\fR
The name os the instance's OS as Ganeti knows
it. This can simplify the OS scripts by providing the same
scripts under multiple names, and then the scripts can use
this name to alter their behaviour.

Under OS api 15 changing the script behavior based
on this variable is deprecated: OS_VARIANT should be used
instead (see below).
.TP
\fBOS_VARIANT\fR
The variant of the OS which should be installed. Each OS
must support all variants listed under its
\fIvariants.list\fR file, and may support more.
Any more supported variants should be properly documented in the
per-os documentation.
.TP
\fBHYPERVISOR\fR
The hypervisor of this instance.
.TP
\fBDISK_COUNT\fR
The number of disks the instance has. The actual
disk defitions are in a set of additional variables. The
instance's disk will be numbered from 0 to this value
minus one.
.TP
\fBDISK_%N_PATH\fR
The path to the storage for disk N of the
instance. This might be either a block device or a regular
file, in which case the OS scripts should use
\fBlosetup\fR (if they need to mount
it). E.g. the first disk of the instance might be exported
as \fBDISK_0_PATH=/dev/drbd0\fR\&.
.TP
\fBDISK_%N_ACCESS\fR
This is how the hypervisor will export the
instance disks: either read-write (\fBrw\fR) or
read-only (\fBro\fR).
.TP
\fBDISK_%N_FRONTEND_TYPE\fR
(Optional) If applicable to the current
hypervisor type: the type of the device exported by the
hypervisor. For example, the Xen HVM hypervisor can export
disks as either \fBparavirtual\fR or
\fBioemu\fR\&.
.TP
\fBDISK_%N_BACKEND_TYPE\fR
How files are visible on the node side. This can
be either \fBblock\fR (when using block
devices) or \fBfile:type\fR, where
\fBtype\fR is either
\fBloop\fR \fBblktap\fR
depending on how the hypervisor will be configured. Note
that not all backend types apply to all
hypervisors.
.TP
\fBNIC_COUNT\fR
Similar to the \fBDISK_COUNT\fR, this
represents the number of NICs of the instance.
.TP
\fBNIC_%N_MAC\fR
The MAC address associated with this
interface.
.TP
\fBNIC_%N_IP\fR
The IP address, if any, associated with the N-th
NIC of the instance.
.TP
\fBNIC_%N_BRIDGE\fR
The bridge to which this NIC will be attached
to.
.TP
\fBNIC_%N_FRONTEND_TYPE\fR
(Optional) If applicable, the type of the exported
NIC to the instance, this can be one of of: rtl8139, ne2k_pci, ne2k_isa, paravirtual\&.
.TP
\fBDEBUG_LEVEL\fR
If non-zero, this should cause the OS script to
generate verbose logs of its execution, for
troubleshooting purposes. Currently only
\fB0\fR and \fB1\fR are
valid values.
.SS "CREATE"
.PP
The \fBcreate\fR command is used for creating
a new instance from scratch. It has no additional environment
variables bside the common ones.
.PP
The \fBINSTANCE_NAME\fR variable denotes the name
of the instance, which is guaranteed to resolve to an IP
address. The create script should configure the instance
according to this name. It can configure the IP statically or
not, depending on the deployment environment.
.PP
The \fBINSTANCE_REINSTALL\fR variable is set to '1' when
this create request is reinstalling and existing instance, rather than
creating one anew. This can be used, for example, to preserve some
data in the old instance in an os-specific way.
.SS "EXPORT"
.PP
This command is used in order to make a backup of a given disk
of the instance. The command should write to stdout a dump of
the given block device. The output of this program will be
passed during restore to the \fBimport\fR
command.
.PP
The specific disk to backup is denoted by two additional
environment variables: \fBEXPORT_INDEX\fR which
denotes the index in the instance disks structure (and could
be used for example to skip the second disk if not needed for
backup) and \fBEXPORT_PATH\fR which has the same
value as \fBDISK_N_PATH\fR but is duplicate
here for easier usage by shell scripts (rather than parse the
DISK_... variables).
.SS "IMPORT"
.PP
The \fBimport\fR command is used for restoring an
instance from a backup as done by
\fBexport\fR\&. The arguments are the similar to
those passed to \fBexport\fR, whose output will
be provided on stdin\&.
.PP
The difference in variables is that the current disk is called
by \fBIMPORT_DEVICE\fR and \fBIMPORT_INDEX\fR
(instead of \fBEXPORT_\fR).
.SS "RENAME"
.PP
This command is used in order to perform a rename at the
instance OS level, after the instance has been renamed in
Ganeti. The command should do whatever steps are required to
ensure that the instance is updated to use the new name, if
the operating system supports it.
.PP
Note that it is acceptable for the rename script to do nothing
at all, however be warned that in this case, there will be a
desynchronization between what gnt-instance
list shows you and the actual hostname of the
instance.
.PP
The script will be passed one additional environment
variable called \fBOLD_INSTANCE_NAME\fR which holds the
old instance name. The \fBINSTANCE_NAME\fR variable
holds the new instance name.
.PP
A very simple rename script should at least change the
hostname and IP address of the instance, leaving the
administrator to update the other services.
.SS "GANETI_API_VERSION"
.PP
The \fIganeti_api_version\fR file is a plain
text file containing the version(s) of the guest OS api that
this OS definition complies with, one per line. The version
documented by this man page is 15, so this file must contain
the number 15 followed by a newline if only this version is
supported. A script compatible more than one ganeti version
should contain the most recent version first (i.e. 15),
followed by the old version(s) (in this case 10 and/or 5).
.SS "VARIANTS.LIST"
.PP
\fIvariants.list\fR is a plain text file
containing all the declared supported variants for this
OS, one per line. At least one variant must be supported.
.SH "NOTES"
.SS "RETROCOMPATIBILITY"
.PP
Ganeti 2.1 is compatible with both api version 10, and 15.
In api version 10 the \fIvariants.list\fR
file is ignored and no OS_VARIANT environment variable is
passed.
.SS "COMMON BEHAVIOUR"
.PP
All the scripts should display an usage message when
called with a wrong number of arguments or when the first
argument is \fB-h\fR or
\fB--help\fR\&.
.SS "UPGRADING FROM OLD VERSIONS"
.SS "VERSION 10 TO 15"
.PP
The \fIvariants.list\fR file has been
added, so OSes should support at least one variant,
declaring it in that file and must be prepared to parse
the OS_VARIANT environment variable. OSes are free to
support more variants than just the declared ones.
.SS "VERSION 5 TO 10"
.PP
The method os passing data has changed from command line
options to environment variables, so scripts should be
modified to use these. For an example of how this can be
done in a way compatible with both versions, feel free to
look at the debootstrap instance's
\fIcommon.sh\fR auxiliary script.
.PP
Also, instances can have now a variable number of disks, not
only two, and a variable number of NICs (instead of fixed
one), so the scripts should deal with this. The biggest
change is in the import/export, which are called once per
disk, instead of once per instance.
.SS "VERSION 4 TO 5"
.PP
The \fIrename\fR script has been added. If
you don't want to do any changes on the instances after a
rename, you can migrate the OS definition to version 5 by
creating the \fIrename\fR script simply as:

.nf
#!/bin/sh

exit 0
          
.fi
.PP
Note that the script must be executable.
.SH "REPORTING BUGS"
.PP
Report bugs to  <URL:http://code.google.com/p/ganeti/> or contact the
developers using the ganeti mailing list
<ganeti@googlegroups.com>\&.
.SH "SEE ALSO"
.PP
Ganeti overview and specifications:
\fBganeti\fR(7) (general overview),
\fBganeti-os-interface\fR(7) (guest OS definitions).
.PP
Ganeti commands:
\fBgnt-cluster\fR(8) (cluster-wide commands),
\fBgnt-job\fR(8) (job-related commands),
\fBgnt-node\fR(8) (node-related commands),
\fBgnt-instance\fR(8) (instance commands),
\fBgnt-os\fR(8) (guest OS commands),
\fBgnt-backup\fR(8) (instance import/export commands),
\fBgnt-debug\fR(8) (debug commands).
.PP
Ganeti daemons:
\fBganeti-watcher\fR(8) (automatic instance restarter),
\fBganeti-cleaner\fR(8) (job queue cleaner),
\fBganeti-noded\fR(8) (node daemon),
\fBganeti-masterd\fR(8) (master daemon),
\fBganeti-rapi\fR(8) (remote API daemon).
.SH "COPYRIGHT"
.PP
Copyright (C) 2006, 2007, 2008, 2009 Google Inc. Permission is
granted to copy, distribute and/or modify under the terms of the
GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option)
any later version.
.PP
On Debian systems, the complete text of the GNU General Public
License can be found in /usr/share/common-licenses/GPL.
