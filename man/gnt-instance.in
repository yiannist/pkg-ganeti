.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "GNT-INSTANCE" "8" "13 June 2008" "ganeti 1.2" ""

.SH NAME
gnt-instance \- ganeti instance administration
.SH SYNOPSIS

\fBgnt-instance \fR \fBcommand\fR [ \fBarguments...\fR ]

.SH "DESCRIPTION"
.PP
The \fBgnt-instance\fR is used for instance
administration in the ganeti system.
.SH "COMMANDS"
.SS "CREATION/REMOVAL/QUERYING"
.SS "ADD"

\fBadd\fR [ \fB-s \fIdisksize\fB\fR ] [ \fB--swap-size \fIdisksize\fB\fR ] [ \fB-m \fImemsize\fB\fR ]
    [ \fB-b \fIbridge\fB\fR ] [ \fB--mac \fIMAC-address\fB\fR ]
    [ \fB--hvm-boot-order \fIboot-order\fB\fR ] [ \fB--hvm-acpi \fIACPI-support\fB\fR ]
    [ \fB--hvm-pae \fIPAE-support\fB\fR ]
    [ \fB--hvm-cdrom-image-path
\fIcdrom-image-path\fB\fR ]
    [ \fB--vnc-bind-address
\fIvnc-bind-address\fB\fR ]
    [ \fB--kernel { default | \fIkernel_path\fB }\fR ]
    [ \fB--initrd { default | none | \fIinitrd_path\fB }\fR ]
    \fB-t { diskless | plain | local_raid1 | remote_raid1 | drbd }\fR
    { \fB-n \fInode[:secondary-node]\fB\fR | \fB--iallocator \fIname\fB\fR }
    \fB-o \fIos-type\fB\fR
    \fB\fIinstance\fB\fR

.PP
Creates a new instance on the specified
host. \fIinstance\fR must be in DNS and
resolve to a IP in the same network as the nodes in the
cluster.
.PP
The \fB-s\fR option specifies the disk size for
the instance, in mebibytes (defaults to
20480MiB =
20GiB). You can also use one of the
suffixes m, g or
t to specificy the exact the units used;
these suffixes map to mebibytes, gibibytes and tebibytes.
.PP
The \fB--swap-size\fR option specifies the swap
disk size (in mebibytes) for the instance (the one presented
as \fI/dev/sdb\fR). The
default is 4096MiB\&. As for the disk
size, you can specify other suffixes.
.PP
The \fB-m\fR option specifies the memory size for
the instance, in mebibytes (defaults to 128 MiB). Again, you
can use other suffixes (e.g. \fB2g\fR).
.PP
The \fB-o\fR options specifies the operating
system to be installed. The available operating systems can
be listed with \fBgnt-os list\fR\&.
.PP
The \fB-b\fR option specifies the bridge to which the
instance will be connected. (defaults to the cluster-wide default
bridge specified at cluster initialization time).
.PP
The \fB--mac\fR option specifies the MAC address
of the ethernet interface for the instance. If this option
is not specified, a new MAC address is generated randomly with
the configured MAC prefix. The randomly generated MAC
address is guaranteed to be unique among the instances of
this cluster.
.PP
The \fB--hvm-boot-order\fR option specifies the
boot device order for Xen HVM instances. The boot order is a
string of letters listing the boot devices, with valid
device letters being:
.PP
.TP
\fBa\fR
floppy drive
.TP
\fBc\fR
hard disk
.TP
\fBd\fR
CDROM drive
.TP
\fBn\fR
network boot (PXE)
.PP
The option is only relevant for Xen HVM instances and
ignored by all other instances types.
.PP
The \fB--hvm-acpi\fR option specifies if Xen
should enable ACPI support for this HVM instance. Valid
values are true or false.
.PP
The \fB--hvm-pae\fR option specifies if Xen
should enabled PAE support for this HVM instance. Valid
values are true or false.
.PP
The \fB--hvm-cdrom-image-path\fR option specifies the
path to the file xen uses to emulate a virtual CDROM drive
for this HVM instance. Valid values are either an
absolute path to an existing file or None, which disables
virtual CDROM support for this instance.
.PP
The \fB--vnc-bind-address\fR option specifies the
address that the VNC listener for this instance should bind
to. Valid values are IPv4 addresses. Use the address 0.0.0.0
to bind to all available interfaces.
.PP
The \fB--iallocator\fR option specifies the instance
allocator plugin to use. If you pass in this option the allocator
will select nodes for this instance automatically, so you don't need
to pass them with the \fB-n\fR option. For more
information please refer to the instance allocator documentation.
.PP
The \fB--kernel\fR option allows the instance to
use a custom kernel (if a filename is passed) or to use the
default kernel (\fI@CUSTOM_XEN_KERNEL@\fR), if the
string default is passed.
.PP
The \fB--initrd\fR option is similar: it allows
the instance to use a custom initrd (if a filename is
passed) or to use the default initrd
(\fI@CUSTOM_XEN_INITRD@\fR), if the string
default is passed, or to disable the
use of an initrd, if the string none is
passed. Note that in the case the instance is set to use the
default initrd and it doesn't exist, it will be silently
ignored; if the instance is set to use a custom initrd and
it doesn't exist, this will be treated as an error and will
prevent the startup of the instance.
.PP
The \fB-t\fR options specifies the disk layout type for
the instance. The available choices are:
.TP
\fBdiskless\fR
This creates an instance with no disks. Its useful for
testing only (or other special cases).
.TP
\fBplain\fR
Disk devices will be logical volumes.
.TP
\fBlocal_raid1\fR
Disk devices will be md raid1 arrays over two local
logical volumes.
.TP
\fBremote_raid1\fR
Disk devices will be md raid1 arrays with one
component (so it's not actually raid1): a drbd
(0.7.x) device between the instance's primary node
and the node given by the second value of the
\fB--node\fR option.
.TP
\fBdrbd\fR
Disk devices will be drbd (version 8.x) on top of
lvm volumes. They are equivalent in functionality to
\fIremote_raid1\fR, but are
recommended for new instances (if you have drbd 8.x
installed).
.PP
The optional second value of the \fB--node\fR is used for
the remote raid template type and specifies the remote node.
.PP
If you do not want gnt-instance to wait for the disk mirror
to be synced, use the \fB--no-wait-for-sync\fR
option.
.PP
Example:

.nf
# gnt-instance add -t plain -s 30g -m 512 -o debian-etch \\
  -n node1.example.com instance1.example.com
# gnt-instance add -t remote_raid1 -s 30g -m 512 -o debian-etch \\
  -n node1.example.com:node2.example.com instance2.example.com
          
.fi
.SS "REMOVE"

\fBremove\fR [ \fB--ignore-failures\fR ] \fB\fIinstance\fB\fR

.PP
Remove an instance. This will remove all data from the
instance and there is \fBno way back\fR\&. If
you are not sure if you use an instance again, use
\fBshutdown\fR first and leave it in the
shutdown state for a while.
.PP
The \fB--ignore-failures\fR option will cause the
removal to proceed even in the presence of errors during the
removal of the instance (e.g. during the shutdown or the
disk removal). If this option is not given, the command will
stop at the first error.
.PP
Example:

.nf
# gnt-instance remove instance1.example.com
          
.fi
.SS "LIST"

\fBlist\fR [ \fB--no-headers\fR ] [ \fB--separator=\fISEPARATOR\fB\fR ] [ \fB-o \fI[+]FIELD,...\fB\fR ]

.PP
Shows the currently configured instances with memory usage,
disk usage, the node they are running on, and the CPU time,
counted in seconds, used by each instance since its latest
restart.
.PP
The \fB--no-headers\fR option will skip the
initial header line. The \fB--separator\fR option
takes an argument which denotes what will be used between
the output fields. Both these options are to help scripting.
.PP
The \fB-o\fR option takes a comma-separated list
of output fields. The available fields and their meaning
are:
.TP
\fBname\fR
the instance name
.TP
\fBos\fR
the OS of the instance
.TP
\fBpnode\fR
the primary node of the instance
.TP
\fBsnodes\fR
comma-separated list of secondary nodes for the
instance; usually this will be just one node
.TP
\fBadmin_state\fR
the desired state of the instance (either "yes"
or "no" denoting the instance should run or
not)
.TP
\fBadmin_ram\fR
the desired memory for the instance
.TP
\fBdisk_template\fR
the disk template of the instance
.TP
\fBoper_state\fR
the actual state of the instance; can be
one of the values "running", "stopped", "(node
down)"
.TP
\fBstatus\fR
combined form of admin_state and oper_stat;
this can be one of:
ERROR_nodedown if the
node of the instance is down,
ERROR_down if the
instance should run but is down,
ERROR_up if the
instance should be stopped but is actually running,
ADMIN_down if the
instance has been stopped (and is stopped) and
running if the
instance is set to be running (and is
running)
.TP
\fBoper_ram\fR
the actual memory usage of the instance as seen
by the hypervisor
.TP
\fBip\fR
the ip address ganeti recognizes as associated with
the instance interface
.TP
\fBmac\fR
the instance interface MAC address
.TP
\fBbridge\fR
bridge the instance is connected to
.TP
\fBsda_size\fR
the size of the instance's first disk
.TP
\fBsdb_size\fR
the size of the instance's second disk
.TP
\fBvcpus\fR
the number of VCPUs allocated to the
instance
.PP
If the value of the option starts with the character
+, the new fields will be added to the
default list. This allows to quickly see the default list
plus a few other fields, instead of retyping the entire list
of fields.
.PP
There is a subtle grouping about the available output
fields: all fields except for \fBoper_state\fR,
\fBoper_ram\fR and \fBstatus\fR are
configuration value and not run-time values. So if you don't
select any of the these fields, the query will be satisfied
instantly from the cluster configuration, without having to
ask the remote nodes for the data. This can be helpful for
big clusters when you only want some data and it makes sense
to specify a reduced set of output fields.
.PP
The default output field list is:
name, os, pnode, admin_state, oper_state, oper_ram\&.
.SS "INFO"

\fBinfo\fR [ \fB\fIinstance\fB\fR\fI ...\fR ]

.PP
Show detailed information about the (given) instances. This
is different from \fBlist\fR as it shows
detailed data about the instance's disks (especially useful
for remote raid templates).
.SS "MODIFY"

\fBmodify\fR [ \fB-m \fImemsize\fB\fR ] [ \fB-p \fIvcpus\fB\fR ] [ \fB-i \fIip\fB\fR ] [ \fB-b \fIbridge\fB\fR ] [ \fB--mac \fIMAC-address\fB\fR ] [ \fB--hvm-boot-order \fIboot-order\fB\fR ] [ \fB--hvm-acpi \fIACPI-support\fB\fR ] [ \fB--hvm-pae \fIPAE-support\fB\fR ] [ \fB--hvm-cdrom-image-path
\fIcdrom-image-path\fB\fR ] [ \fB--vnc-bind-address
\fIvnc-bind-address\fB\fR ]
    [ \fB--kernel  { default | \fIkernel_path\fB }\fR ]
    [ \fB--initrd  { default | none | \fIinitrd_path\fB } \fR ]
    \fB\fIinstance\fB\fR

.PP
Modify the memory size, number of vcpus, ip address, MAC
address and/or bridge for an instance.
.PP
The memory size is given in MiB. Note that you need to give
at least one of the arguments, otherwise the command
complains.
.PP
The \fB--kernel\fR, \fB--initrd\fR
and \fB--hvm-boot-order\fR
options are described in the \fBadd\fR command.
.PP
Additionally, the HVM boot order can be reset to the default
values by using \fB--hvm-boot-order=default\fR\&.
.PP
The \fB--hvm-acpi\fR option specifies if Xen
should enable ACPI support for this HVM instance. Valid
values are true or false.
.PP
The \fB--hvm-pae\fR option specifies if Xen
should enabled PAE support for this HVM instance. Valid
values are true or false.
.PP
The \fB--hvm-cdrom-image-path\fR specifies the
path to the file xen uses to emulate a virtual CDROM drive
for this HVM instance. Valid values are either an
absolute path to an existing file or None, which disables
virtual CDROM support for this instance.
.PP
The \fB--vnc-bind-address\fR specifies the
address that the VNC listener for this instance should bind
to. Valid values are IPv4 addresses. Use the address 0.0.0.0
to bind to all available interfaces.
.PP
All the changes take effect at the next restart. If the
instance is running, there is no effect on the instance.
.SS "REINSTALL"

\fBreinstall\fR [ \fB-o \fIos-type\fB\fR ] [ \fB-f \fIforce\fB\fR ] \fB\fIinstance\fB\fR

.PP
Reinstalls the operating system on the given instance. The instance
must be stopped when running this command. If the
\fB--os-type\fR is specified, the operating system is
changed.
.SS "RENAME"

\fBrename\fR [ \fB--no-ip-check\fR ] \fB\fIinstance\fB\fR \fB\fInew_name\fB\fR

.PP
Renames the given instance. The instance must be stopped
when running this command. The requirements for the new name
are the same as for adding an instance: the new name must be
resolvable and the IP it resolves to must not be reachable
(in order to prevent duplicate IPs the next time the
instance is started). The IP test can be skipped if the
\fB--no-ip-check\fR option is passed.
.SS "STARTING/STOPPING/CONNECTING TO CONSOLE"
.SS "STARTUP"

\fBstartup\fR [ \fB--extra=\fIPARAMS\fB\fR ] [ \fB--force\fR ]
    [ \fB--instance\fR | \fB--node\fR | \fB--primary\fR | \fB--secondary\fR | \fB--all\fR ]
    [ \fB\fIname\fB\fR\fI ...\fR ]

.PP
Starts one or more instances, depending on the following
options. The four available modes are:
.TP
\fB--instance\fR
will start the instances given as arguments
(at least one argument required); this is the default
selection
.TP
\fB--node\fR
will start the instances who have the given
node as either primary or secondary
.TP
\fB--primary\fR
will start all instances whose primary node
is in the list of nodes passed as arguments (at least
one node required)
.TP
\fB--secondary\fR
will start all instances whose secondary node
is in the list of nodes passed as arguments (at least
one node required)
.TP
\fB--all\fR
will start all instances in the cluster (no
arguments accepted)
.PP
Note that although you can pass more than one selection
option, the last one wins, so in order to guarantee the
desired result, don't pass more than one such option.
.PP
The \fB--extra\fR option is used to pass
additional argument to the instance's kernel for this start
only. Currently there is no way to specify a persistent set
of arguments (beside the one hardcoded). Note that this may
not apply to all virtualization types.
.PP
Use \fB--force\fR to start even if secondary disks are
failing.
.PP
Example:

.nf
# gnt-instance start instance1.example.com
# gnt-instance start --extra single test1.example.com
# gnt-instance start --node node1.example.com node2.example.com
# gnt-instance start --all
          
.fi
.SS "SHUTDOWN"

\fBshutdown\fR
    [ \fB--instance\fR | \fB--node\fR | \fB--primary\fR | \fB--secondary\fR | \fB--all\fR ]
    [ \fB\fIname\fB\fR\fI ...\fR ]

.PP
Stops one or more instances. If the instance cannot be
cleanly stopped during a hardcoded interval (currently 2
minutes), it will forcibly stop the instance (equivalent to
switching off the power on a physical machine).
.PP
The \fB--instance\fR, \fB--node\fR,
\fB--primary\fR, \fB--secondary\fR and
\fB--all\fR options are similar as for the
\fBstartup\fR command and they influence the
actual instances being shutdown.
.PP
Example:

.nf
# gnt-instance shutdown instance1.example.com
# gnt-instance shutdown --all
          
.fi
.SS "REBOOT"

\fBreboot\fR
    [ \fB--extra=\fIPARAMS\fB\fR ]
    [ \fB--type=\fIREBOOT-TYPE\fB\fR ]
    [ \fB--ignore-secondaries\fR ]
    [ \fB--force-multiple\fR ]
    [ \fB--instance\fR | \fB--node\fR | \fB--primary\fR | \fB--secondary\fR | \fB--all\fR ]
    [ \fB\fIname\fB\fR\fI ...\fR ]

.PP
Reboots one or more instances. The type of reboot depends on
the value of \fB--type\fR\&. A soft reboot does a
hypervisor reboot, a hard reboot does a instance stop,
recreates the hypervisor config for the instance and
starts the instance. A full reboot does the equivalent
of \fBgnt-instance shutdown && gnt-instance
startup\fR\&. The default is soft reboot.
.PP
For the hard reboot the option
\fB--ignore-secondaries\fR ignores errors for the
secondary node while re-assembling the instance disks.
.PP
The \fB--instance\fR, \fB--node\fR,
\fB--primary\fR, \fB--secondary\fR and
\fB--all\fR options are similar as for the
\fBstartup\fR command and they influence the
actual instances being rebooted.
.PP
Use the \fB--force-multiple\fR option to keep
gnt-instance from asking for confirmation when more than one
instance is affected.
.PP
Example:

.nf
# gnt-instance reboot instance1.example.com
# gnt-instance reboot --type=full instance1.example.com
          
.fi
.SS "CONSOLE"

\fBconsole\fR \fB\fIinstance\fB\fR

.PP
Connects to the console of the given instance. If the instance
is not up, an error is returned.
.PP
Example:

.nf
# gnt-instance console instance1.example.com
          
.fi
.SS "DISK MANAGEMENT"
.SS "REPLACE-DISKS"

\fBreplace-disks\fR { \fB--new-secondary \fINODE\fB\fR | \fB--iallocator \fIname\fB\fR } \fB\fIinstance\fB\fR


\fBreplace-disks\fR { \fB--iallocator \fIname\fB\fR | \fB--new-secondary \fINODE\fB\fR }
    [ \fB-s\fR ] \fB\fIinstance\fB\fR


\fBreplace-disks\fR [ \fB-s\fR | \fB-p\fR ] \fB\fIinstance\fB\fR

.PP
This command is a generalized form for adding and replacing
disks.
.PP
The first form is usable with the
remote_raid1 disk template. This will
replace the disks on both the primary and secondary node,
and optionally will change the secondary node to a new one
if you pass the \fB--new-secondary\fR option.
.PP
The second and third forms are usable with the
drbd disk template. The second form will
do a secondary replacement, but as opposed to the
remote_raid1 will not replace the disks
on the primary, therefore it will execute faster. The third
form will replace the disks on either the primary
(\fB-p\fR) or the secondary (\fB-s\fR)
node of the instance only, without changing the node.
.PP
Specifying \fB--iallocator\fR enables secondary node
replacement and and makes the new secondary be selected automatically
by the specified allocator plugin.
.SS "ADD-MIRROR"

\fBadd-mirror\fR \fB-b \fIsdX\fB\fR \fB-n \fInode\fB\fR \fB\fIinstance\fB\fR

.PP
Adds a new mirror to the disk layout of the instance, if the
instance has a remote raid disk layout.
The new mirror member will be between the instance's primary
node and the node given with the \fB-n\fR option.
.SS "REMOVE-MIRROR"

\fBremovemirror\fR \fB-b \fIsdX\fB\fR \fB-p \fIid\fB\fR \fB\fIinstance\fB\fR

.PP
Removes a mirror componenent from the disk layout of the
instance, if the instance has a remote raid disk layout.
.PP
You need to specifiy on which disk to act on using the
\fB-b\fR option (either \fIsda\fR
or \fIsdb\fR) and the mirror component, which
is identified by the \fB-p\fR option. You can
find the list of valid identifiers with the
\fBinfo\fR command.
.SS "ACTIVATE-DISKS"

\fBactivate-disks\fR \fB\fIinstance\fB\fR

.PP
Activates the block devices of the given instance. If
successful, the command will show the location and name of
the block devices:

.nf
node1.example.com:sda:/dev/md0
node1.example.com:sdb:/dev/md1
          
.fi
In this example, \fBnode1.example.com\fR is
the name of the node on which the devices have been
activated. The \fBsda\fR and
\fBsdb\fR are the names of the block devices
inside the instance. \fB/dev/md0\fR and
\fB/dev/md1\fR are the names of the block
devices as visible on the node.
.PP
Note that it is safe to run this command while the instance
is already running.
.SS "DEACTIVATE-DISKS"

\fBdeactivate-disks\fR \fB\fIinstance\fB\fR

.PP
De-activates the block devices of the given instance. Note
that if you run this command for a remote raid instance
type, while it is running, it will not be able to shutdown
the block devices on the primary node, but it will shutdown
the block devices on the secondary nodes, thus breaking the
replication.
.SS "RECOVERY"
.SS "FAILOVER"

\fBfailover\fR [ \fB-f\fR ] [ \fB--ignore-consistency\fR ] \fB\fIinstance\fB\fR

.PP
Failover will fail the instance over its secondary
node. This works only for instances having a remote raid
disk layout.
.PP
Normally the failover will check the consistency of the
disks before failing over the instance. If you are trying to
migrate instances off a dead node, this will fail. Use the
\fB--ignore-consistency\fR option for this
purpose. Note that this option can be dangerous as errors in
shutting down the instance will be ignored, resulting in
possibly having the instance running on two machines in
parallel (on disconnected DRBD drives).
.PP
Example:

.nf
# gnt-instance failover instance1.example.com
          
.fi
.SS "TAGS"
.SS "ADD-TAGS"

\fBadd-tags\fR [ \fB--from \fIfile\fB\fR ] \fB\fIinstancename\fB\fR \fB\fItag\fB\fR\fI ...\fR

.PP
Add tags to the given instance. If any of the tags contains
invalid characters, the entire operation will abort.
.PP
If the \fB--from\fR option is given, the list of
tags will be extended with the contents of that file (each
line becomes a tag). In this case, there is not need to pass
tags on the command line (if you do, both sources will be
used). A file name of - will be interpreted as stdin.
.SS "LIST-TAGS"

\fBlist-tags\fR \fB\fIinstancename\fB\fR

.PP
List the tags of the given instance.
.SS "REMOVE-TAGS"

\fBremove-tags\fR [ \fB--from \fIfile\fB\fR ] \fB\fIinstancename\fB\fR \fB\fItag\fB\fR\fI ...\fR

.PP
Remove tags from the given instance. If any of the tags are
not existing on the node, the entire operation will abort.
.PP
If the \fB--from\fR option is given, the list of
tags will be extended with the contents of that file (each
line becomes a tag). In this case, there is not need to pass
tags on the command line (if you do, both sources will be
used). A file name of - will be interpreted as stdin.
.SH "REPORTING BUGS"
.PP
Report bugs to http://code.google.com/p/ganeti/ or contact the
developers using the ganeti mailing list
<ganeti@googlegroups.com>\&.
.SH "SEE ALSO"
.PP
Ganeti overview and specifications:
\fBganeti\fR(7) (general overview),
\fBganeti-os-interface\fR(7) (guest OS definitions).
.PP
Ganeti commands:
\fBgnt-cluster\fR(8) (cluster-wide commands),
\fBgnt-node\fR(8) (node-related commands),
\fBgnt-instance\fR(8) (instance commands),
\fBgnt-os\fR(8) (guest OS commands).
\fBgnt-backup\fR(8) (instance import/export commands).
.PP
Ganeti daemons:
\fBganeti-watcher\fR(8) (automatic instance restarter),
\fBganeti-noded\fR(8) (node daemon),
\fBganeti-master\fR(8) (the master startup script),
\fBganeti-rapi\fR(8) (remote API daemon).
.SH "COPYRIGHT"
.PP
Copyright (C) 2006, 2007 Google Inc. Permission is granted to
copy, distribute and/or modify under the terms of the GNU
General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option)
any later version.
.PP
On Debian systems, the complete text of the GNU General Public
License can be found in /usr/share/common-licenses/GPL.
